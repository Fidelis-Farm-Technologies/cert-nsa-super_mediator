#! /bin/sh

##  Copyright 2021-2023 Carnegie Mellon University
##  See license information in LICENSE.txt.

##  ------------------------------------------------------------------------
##  @DISTRIBUTION_STATEMENT_BEGIN@
##  Super Mediator 2.0.0
##
##  Copyright 2023 Carnegie Mellon University.
##
##  NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING
##  INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON
##  UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED,
##  AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR
##  PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF
##  THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF
##  ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT
##  INFRINGEMENT.
##
##  Licensed under a GNU GPL 2.0-style license, please see LICENSE.txt or
##  contact permission@sei.cmu.edu for full terms.
##
##  [DISTRIBUTION STATEMENT A] This material has been approved for public
##  release and unlimited distribution.  Please see Copyright notice for
##  non-US Government use and distribution.
##
##  GOVERNMENT PURPOSE RIGHTS - Software and Software Documentation
##  Contract No.: FA8702-15-D-0002
##  Contractor Name: Carnegie Mellon University
##  Contractor Address: 4500 Fifth Avenue, Pittsburgh, PA 15213
##
##  The Government's rights to use, modify, reproduce, release, perform,
##  display, or disclose this software are restricted by paragraph (b)(2) of
##  the Rights in Noncommercial Computer Software and Noncommercial Computer
##  Software Documentation clause contained in the above identified
##  contract. No restrictions apply after the expiration date shown
##  above. Any reproduction of the software or portions thereof marked with
##  this legend must also reproduce the markings.
##
##  This Software includes and/or makes use of Third-Party Software each
##  subject to its own license.
##
##  DM23-2321
##  @DISTRIBUTION_STATEMENT_END@
##  ------------------------------------------------------------------------

#  Run as part of "make check".
#
#  This file tests configuration files using the --test-config switch.
#  All commands in this file deal with comparison filters and all are
#  expected to FAIL.
#

# name of this file
test_script="`basename $0 .test`"

# source the setup file
if [ -f "tests/setup.sh" ] ; then
    setup="tests/setup.sh"
else
    setup="${srcdir}/tests/setup.sh"
fi
. ${setup}

# ensure basic things work
check_sm_version
check_make_temp


testnum=0

# For help in tracking errors
set -x


# Number of tests
echo 1..27


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not use <,> with IPs
  sourceIPv4Address < 203.0.113.201
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not use <,> with strings
  interfaceName > "interface"
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not use IN_LIST with non-list
  protocolIdentifier IN_LIST 23
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # must use IN_LIST with a list
  sourceTransportPort == [ 80, 443 ]
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not use a bareword as the value
  "interfaceName" != interface
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not have an empty list (parser error at "]")
  destinationIPv4Address IN_LIST [ ]
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE "C1"
  PATH "/dev/null"
COLLECTOR END
COLLECTOR SINGLE_FILE "C2"
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not check collector against a list (parser error at "[")
  collector IN_LIST [ "C1", "C2" ]
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE "C8"
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may only check collector with "==" and "!=" operators
  collector < "C8"
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not compare to an unknown collector
  collector == "my collector"
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not compare to an unknown collector
  collector == 1
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE "me myself and I"
  PATH "/dev/null"
COLLECTOR END
COLLECTOR SINGLE_FILE "not me"
  PATH "/dev/null"
  # may not have a collector comparison in the collector
  collector != "me myself and I"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not compare a structure data
  smtpHeaderList == "some value"
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not use an unknown IE
  "nonExistantInfoElement" == 34
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # must use a string of 6 chars for a macAddress (short)
  sourceMacAddress != "abc"
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # must use a string of 6 chars for a macAddress (long)
  sourceMacAddress != "abcdefghi"
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # must use a string of 6 chars for a macAddress (not a string)
  sourceMacAddress != 20015998343868
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not compare an integer element with a double
  sourceTransportPort >= 10.24
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not compare a string element with an integer
  smtpSubject != 56
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not compare a double element to an integer
  samplingProbability > 6
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not compare an IPv4 element to an integer
  sourceIPv4Address == 2130706433
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not compare an integer element with a string
  protocolIdentifier IN_LIST [ "udp", "tcp", "icmp" ]
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # may not compare a datetime element to a string
  flowStartSeconds == "2021/07/29T12:13:14"
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # unquoted date time is a syntax error (parses as an IP; what?)
  flowStartSeconds == 2021/07/29T12:13:14
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # must use a valid IP address
  destinationIPv4Address == 1.2.3.4.5.6.7.8
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
  # must use a valid IP address
  destinationIPv6Address == 12:34:56
EXPORTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
EXPORTER END
# may not have an empty filter block
FILTER
FILTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"


testnum=`expr 1 + ${testnum}`
config=`make_temp ${test_script}-${testnum}`
cat <<EOF >>${config}
COLLECTOR SINGLE_FILE
  PATH "/dev/null"
COLLECTOR END
EXPORTER IPFIX SINGLE_FILE
  PATH "/dev/null"
EXPORTER END
# may not have an empty filter block
FILTER
  # may not have an empty filter block
  AND_FILTER
FILTER END
EOF
run_sm_xfail ${testnum} --config="${config}" --test-config
remove_if_success "${config}"



#  Exit with success
exit 0
